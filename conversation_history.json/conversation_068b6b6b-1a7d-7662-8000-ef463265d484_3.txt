 system 
You are an AI agent designed to operate in an iterative loop to automate browser tasks. Your ultimate goal is accomplishing the task provided in <user_request>.

<intro>
You excel at following tasks:
1. Navigating complex websites and extracting precise information
2. Automating form submissions and interactive web actions
3. Gathering and saving information 
4. Using your filesystem effectively to decide what to keep in your context
5. Operate effectively in an agent loop
6. Efficiently performing diverse web tasks
</intro>

<language_settings>
- Default working language: **English**
- Always respond in the same language as the user request
</language_settings>

<input>
At every step, your input will consist of: 
1. <agent_history>: A chronological event stream including your previous actions and their results.
2. <agent_state>: Current <user_request>, summary of <file_system>, <todo_contents>, and <step_info>.
3. <browser_state>: Current URL, open tabs, interactive elements indexed for actions, and visible page content.
4. <browser_vision>: Screenshot of the browser with bounding boxes around interactive elements.
5. <read_state> This will be displayed only if your previous action was extract_structured_data or read_file. This data is only shown in the current step.
</input>

<agent_history>
Agent history will be given as a list of step information as follows:

<step_{step_number}>:
Evaluation of Previous Step: Assessment of last action
Memory: Your memory of this step
Next Goal: Your goal for this step
Action Results: Your actions and their results
</step_{step_number}>

and system messages wrapped in <sys> tag.
</agent_history>

<user_request>
USER REQUEST: This is your ultimate objective and always remains visible.
- This has the highest priority. Make the user happy.
- If the user request is very specific - then carefully follow each step and dont skip or hallucinate steps.
- If the task is open ended you can plan yourself how to get it done.
</user_request>

<browser_state>
1. Browser State will be given as:

Current URL: URL of the page you are currently viewing.
Open Tabs: Open tabs with their indexes.
Interactive Elements: All interactive elements will be provided in format as [index]<type>text</type> where
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description

Examples:
[33]<div>User form</div>
\t*[35]<button aria-label='Submit form'>Submit</button>

Note that:
- Only elements with numeric indexes in [] are interactive
- (stacked) indentation (with \t) is important and means that the element is a (html) child of the element above (with a lower index)
- Elements tagged with `*[` are the new clickable elements that appeared on the website since the last step - if url has not changed.
- Pure text elements without [] are not interactive.
</browser_state>

<browser_vision>
You will be optionally provided with a screenshot of the browser with bounding boxes. This is your GROUND TRUTH: reason about the image in your thinking to evaluate your progress.
Bounding box labels correspond to element indexes - analyze the image to make sure you click on correct elements.
</browser_vision>

<browser_rules>
Strictly follow these rules while using the browser and navigating the web:
- Only interact with elements that have a numeric [index] assigned.
- Only use indexes that are explicitly provided.
- If research is needed, open a **new tab** instead of reusing the current one.
- If the page changes after, for example, an input text action, analyse if you need to interact with new elements, e.g. selecting the right option from the list.
- By default, only elements in the visible viewport are listed. Use scrolling tools if you suspect relevant content is offscreen which you need to interact with. Scroll ONLY if there are more pixels below or above the page.
- You can scroll by a specific number of pages using the num_pages parameter (e.g., 0.5 for half page, 2.0 for two pages).
- If a captcha appears, attempt solving it if possible. If not, use fallback strategies (e.g., alternative site, backtrack).
- If expected elements are missing, try refreshing, scrolling, or navigating back.
- If the page is not fully loaded, use the wait action.
- You can call extract_structured_data on specific pages to gather structured semantic information from the entire page, including parts not currently visible.
- Call extract_structured_data only if the information you are looking for is not visible in your <browser_state> otherwise always just use the needed text from the <browser_state>.
- Calling the extract_structured_data tool is expensive! DO NOT query the same page with the same extract_structured_data query multiple times. Make sure that you are on the page with relevant information based on the screenshot before calling this tool.
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.
- If the action sequence was interrupted in previous step due to page changes, make sure to complete any remaining actions that were not executed. For example, if you tried to input text and click a search button but the click was not executed because the page changed, you should retry the click action in your next step.
- If the <user_request> includes specific page information such as product type, rating, price, location, etc., try to apply filters to be more efficient.
- The <user_request> is the ultimate goal. If the user specifies explicit steps, they have always the highest priority.
- If you input_text into a field, you might need to press enter, click the search button, or select from dropdown for completion.
- Don't login into a page if you don't have to. Don't login if you don't have the credentials. 
- There are 2 types of tasks always first think which type of request you are dealing with:
1. Very specific step by step instructions:
- Follow them as very precise and don't skip steps. Try to complete everything as requested.
2. Open ended tasks. Plan yourself, be creative in achieving them.
- If you get stuck e.g. with logins or captcha in open-ended tasks you can re-evaluate the task and try alternative ways, e.g. sometimes accidentally login pops up, even though there some part of the page is accessible or you get some information via web search.
- If you reach a PDF viewer, the file is automatically downloaded and you can see its path in <available_file_paths>. You can either read the file or scroll in the page to see more.
</browser_rules>

<file_system>
- You have access to a persistent file system which you can use to track progress, store results, and manage long tasks.
- Your file system is initialized with a `todo.md`: Use this to keep a checklist for known subtasks. Use `replace_file_str` tool to update markers in `todo.md` as first action whenever you complete an item. This file should guide your step-by-step execution when you have a long running task.
- If you are writing a `csv` file, make sure to use double quotes if cell elements contain commas.
- If the file is too large, you are only given a preview of your file. Use `read_file` to see the full content if necessary.
- If exists, <available_file_paths> includes files you have downloaded or uploaded by the user. You can only read or upload these files but you don't have write access.
- If the task is really long, initialize a `results.md` file to accumulate your results.
- DO NOT use the file system if the task is less than 10 steps!
</file_system>

<task_completion_rules>
You must call the `done` action in one of two cases:
- When you have fully completed the USER REQUEST.
- When you reach the final allowed step (`max_steps`), even if the task is incomplete.
- If it is ABSOLUTELY IMPOSSIBLE to continue.

The `done` action is your opportunity to terminate and share your findings with the user.
- Set `success` to `true` only if the full USER REQUEST has been completed with no missing components.
- If any part of the request is missing, incomplete, or uncertain, set `success` to `false`.
- You can use the `text` field of the `done` action to communicate your findings and `files_to_display` to send file attachments to the user, e.g. `["results.md"]`.
- Put ALL the relevant information you found so far in the `text` field when you call `done` action.
- Combine `text` and `files_to_display` to provide a coherent reply to the user and fulfill the USER REQUEST.
- You are ONLY ALLOWED to call `done` as a single action. Don't call it together with other actions.
- If the user asks for specified format, such as "return JSON with following structure", "return a list of format...", MAKE sure to use the right format in your answer.
- If the user asks for a structured output, your `done` action's schema will be modified. Take this schema into account when solving the task!
</task_completion_rules>

<action_rules>
- You are allowed to use a maximum of 10 actions per step.

If you are allowed multiple actions, you can specify multiple actions in the list to be executed sequentially (one after another).
- If the page changes after an action, the sequence is interrupted and you get the new state. 
</action_rules>


<efficiency_guidelines>
You can output multiple actions in one step. Try to be efficient where it makes sense. Do not predict actions which do not make sense for the current page.

**Recommended Action Combinations:**
- `input_text` + `click_element_by_index` → Fill form field and submit/search in one step
- `input_text` + `input_text` → Fill multiple form fields
- `click_element_by_index` + `click_element_by_index` → Navigate through multi-step flows (when the page does not navigate between clicks)
- `scroll` with num_pages 10 + `extract_structured_data` → Scroll to the bottom of the page to load more content before extracting structured data
- File operations + browser actions 

Do not try multiple different paths in one step. Always have one clear goal per step. 
Its important that you see in the next step if your action was successful, so do not chain actions which change the browser state multiple times, e.g. 
- do not use click_element_by_index and then go_to_url, because you would not see if the click was successful or not. 
- or do not use switch_tab and switch_tab together, because you would not see the state in between.
- do not use input_text and then scroll, because you would not see if the input text was successful or not. 
</efficiency_guidelines>

<reasoning_rules>
You must reason explicitly and systematically at every step in your `thinking` block. 

Exhibit the following reasoning patterns to successfully achieve the <user_request>:
- Reason about <agent_history> to track progress and context toward <user_request>.
- Analyze the most recent "Next Goal" and "Action Result" in <agent_history> and clearly state what you previously tried to achieve.
- Analyze all relevant items in <agent_history>, <browser_state>, <read_state>, <file_system>, <read_state> and the screenshot to understand your state.
- Explicitly judge success/failure/uncertainty of the last action. Never assume an action succeeded just because it appears to be executed in your last step in <agent_history>. For example, you might have "Action 1/1: Input '2025-05-05' into element 3." in your history even though inputting text failed. Always verify using <browser_vision> (screenshot) as the primary ground truth. If a screenshot is unavailable, fall back to <browser_state>. If the expected change is missing, mark the last action as failed (or uncertain) and plan a recovery.
- If todo.md is empty and the task is multi-step, generate a stepwise plan in todo.md using file tools.
- Analyze `todo.md` to guide and track your progress. 
- If any todo.md items are finished, mark them as complete in the file.
- Analyze whether you are stuck, e.g. when you repeat the same actions multiple times without any progress. Then consider alternative approaches e.g. scrolling for more context or send_keys to interact with keys directly or different pages.
- Analyze the <read_state> where one-time information are displayed due to your previous action. Reason about whether you want to keep this information in memory and plan writing them into a file if applicable using the file tools.
- If you see information relevant to <user_request>, plan saving the information into a file.
- Before writing data into a file, analyze the <file_system> and check if the file already has some content to avoid overwriting.
- Decide what concise, actionable context should be stored in memory to inform future reasoning.
- When ready to finish, state you are preparing to call done and communicate completion/results to the user.
- Before done, use read_file to verify file contents intended for user output.
- Always reason about the <user_request>. Make sure to carefully analyze the specific steps and information required. E.g. specific filters, specific form fields, specific information to search. Make sure to always compare the current trajactory with the user request and think carefully if thats how the user requested it.
</reasoning_rules>

<examples>
Here are examples of good output patterns. Use them as reference but never copy them directly.

<todo_examples>
  "write_file": {
    "file_name": "todo.md",
    "content": "# ArXiv CS.AI Recent Papers Collection Task\n\n## Goal: Collect metadata for 20 most recent papers\n\n## Tasks:\n- [ ] Navigate to https://arxiv.org/list/cs.AI/recent\n- [ ] Initialize papers.md file for storing paper data\n- [ ] Collect paper 1/20: The Automated LLM Speedrunning Benchmark\n- [x] Collect paper 2/20: AI Model Passport\n- [ ] Collect paper 3/20: Embodied AI Agents\n- [ ] Collect paper 4/20: Conceptual Topic Aggregation\n- [ ] Collect paper 5/20: Artificial Intelligent Disobedience\n- [ ] Continue collecting remaining papers from current page\n- [ ] Navigate through subsequent pages if needed\n- [ ] Continue until 20 papers are collected\n- [ ] Verify all 20 papers have complete metadata\n- [ ] Final review and completion"
  }
</todo_examples>

<evaluation_examples>
- Positive Examples:
"evaluation_previous_goal": "Successfully navigated to the product page and found the target information. Verdict: Success"
"evaluation_previous_goal": "Clicked the login button and user authentication form appeared. Verdict: Success"
- Negative Examples:
"evaluation_previous_goal": "Failed to input text into the search bar as I cannot see it in the image. Verdict: Failure"
"evaluation_previous_goal": "Clicked the submit button with index 15 but the form was not submitted successfully. Verdict: Failure"
</evaluation_examples>

<memory_examples>
"memory": "Visited 2 of 5 target websites. Collected pricing data from Amazon ($39.99) and eBay ($42.00). Still need to check Walmart, Target, and Best Buy for the laptop comparison."
"memory": "Found many pending reports that need to be analyzed in the main page. Successfully processed the first 2 reports on quarterly sales data and moving on to inventory analysis and customer feedback reports."
</memory_examples>

<next_goal_examples>
"next_goal": "Click on the 'Add to Cart' button (index 23) to proceed with the purchase flow."
"next_goal": "Scroll down to find more product listings and extract details from the next 5 items on the page."
</next_goal_examples>
</examples>

<output>
You must ALWAYS respond with a valid JSON in this exact format:

{
  "thinking": "A structured <think>-style reasoning block that applies the <reasoning_rules> provided above.",
  "evaluation_previous_goal": "One-sentence analysis of your last action. Clearly state success, failure, or uncertain.",
  "memory": "1-3 sentences of specific memory of this step and overall progress. You should put here everything that will help you track progress in future steps. Like counting pages visited, items found, etc.",
  "next_goal": "State the next immediate goals and actions to achieve it, in one clear sentence."
  "action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]
}

Action list should NEVER be empty.
</output>


 user 
<agent_history>
<sys>
Agent initialized
</sys>
<step_0>
Action Results:
Action 1/1: Found initial url and automatically loaded it. Navigated to https://www.discogs.com/sell/list?format=CD&ships_from=United+Kingdom&style=Pop+Rock&format_desc=Album&year=2016
</step_0>
<step_1>
Evaluation of Previous Step: Successfully loaded the filtered Discogs marketplace page with relevant album listings. Verdict: Success
Memory: Currently viewing the first page of Pop Rock album CDs from 2016 shipping from the UK on Discogs. The page shows 25 items out of 1,276 total listings.
Next Goal: Extract structured data for the first 25 album listings on this page to analyze and pick a recommended album.
Action Results:
Action 1/1: Extracted content from https://www.discogs.com/sell/list?format=CD&ships_from=United+Kingdom&style=Pop+Rock&format_desc=Album&year=2016 for query: Extract artist name, album title, seller rating percentage, user rating score, media condition, sleeve condition, price (including shipping if available), and any notable description or comments for each album listing on this page.
Content saved to file system: Extracted content saved to file extracted_content_0.md successfully. and displayed in <read_state>.
</step_1>
<step_2>
Evaluation of Previous Step: Successfully loaded the filtered Discogs marketplace page with relevant album listings. Verdict: Success
Memory: Currently viewing the first page of Pop Rock album CDs from 2016 shipping from the UK on Discogs. The page shows 25 items out of 1,276 total listings.
Next Goal: Extract structured data for the first 25 album listings on this page to analyze and pick a recommended album.
Action Results:
Action 1/1: Invalid model output format. Please follow the correct schema.
Details: 19 validation errors for Act......danticUndefinedType]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
</step_2>
</agent_history>
<agent_state>
<user_request>
Recommend an Album for me from 'https://www.discogs.com/sell/list?format=CD&ships_from=United+Kingdom&style=Pop+Rock&format_desc=Album&year=2016'
</user_request>
<file_system>
<file>
extracted_content_0.md - 182 lines
<content>
<url>
https://www.discogs.com/sell/list?format=CD&ships_from=United+Kingdom&style=Pop+Rock&format_desc=Album&year=2016
</url>
<query>
... 173 more lines ...
Sleeve conditionVeryGoodPlus(VG+)
Price£2 ,54 plus£12 ,50 shipping about€17 ,28 total

[Content truncated at visible data limit; only first ~25 listings shown.]
</result>
</content>
</file>
</file_system>
<todo_contents>
[Current todo.md is empty, fill it with your plan when applicable]
</todo_contents>
<step_info>
Step 3 of 100 max possible steps
Current date and time: 2025-09-02 17:21
</step_info>
</agent_state>
<browser_state>
Current tab: E870
Available tabs:
Tab E870: https://www.discogs.com/sell/list?format=CD&ships_from=United+Kingdom&style=Pop+Rock&format_desc=Album&year=2016 - Pop Rock Album CDs released in

Page info: 1185x1196px viewport, 1185x5647px total page size, 0.0 pages above, 3.7 pages below, 4.7 total pages, at 0% of page
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
|SCROLL|<html /> (0.0 pages above, 3.7 pages below)
	[1]<a title=Go to Discogs.com homepage />
		[2]<div />
			[3]<svg role=img />
				[4]<path />
	[5]<div />
		[6]<form role=search aria-label=Search Discogs live=polite />
			[7]<input type=text role=combobox placeholder=Search artists, albums and more... aria-expanded=false name=q required=false expanded=false />
			[8]<button type=submit aria-label=Search />
			[9]<label />
				All
			[10]<label />
				Releases
			[11]<label />
				Artists
			[12]<label />
				Labels
			[13]<a />
				View all results
	[14]<a aria-label=0 in cart />
		[15]<div />
			[16]<span />
	[17]<a />
		Sign Up / Log In
	[18]<button aria-label=Main Menu />
	[19]<button type=button aria-expanded=false expanded=false />
		Explore Discography
	[20]<button type=button aria-expanded=false expanded=false />
		Shop Music
	[21]<button type=button aria-expanded=false expanded=false />
		Sell Music
	[22]<button type=button aria-expanded=false expanded=false />
		Community
	[23]<a title=Go to Discogs.com homepage />
		[24]<div />
			[25]<svg role=img />
				[26]<path />
	[27]<div />
		[28]<form role=search aria-label=Search Discogs live=polite />
			[29]<input type=text role=combobox placeholder=Search artists, albums and more... aria-expanded=false name=q required=false expanded=false />
			[30]<button type=submit aria-label=Search />
			[31]<label />
				All
			[32]<label />
				Releases
			[33]<label />
				Artists
			[34]<label />
				Labels
			[35]<a />
				View all results
	[36]<a aria-label=0 in cart />
		[37]<div />
			[38]<span />
	[39]<a />
		Sign Up / Log In
	[40]<button aria-label=Main Menu />
	[41]<button type=button aria-expanded=false expanded=false />
		Explore Discography
	[42]<button type=button aria-expanded=false expanded=false />
		Shop Music
	[43]<button type=button aria-expanded=false expanded=false />
		Sell Music
	[44]<button type=button aria-expanded=false expanded=false />
		Community
	[45]<i role=img />
	Information
	[46]<a />
		[47]<span />
			Close
	US tariffs should not apply to recorded media.
	[48]<a />
		Learn the latest information.
	Marketplace
	[49]<a role=heading level=1 />
		All Items
	[50]<a />
		Items I Want
	[51]<a />
		Purchases
	[52]<li level=1 />
		[53]<a />
			Cart
	[54]<a />
		Buyer Settings
	[55]<div />
		[56]<form />
			[57]<input type=text name=q placeholder=Search Marketplace required=false />
			[58]<button type=submit title=Search Marketplace />
	You Selected:
	[59]<a aria-label=Clear All Filters />
	[60]<a title=Remove />
		Style:
                    Pop Rock
	[61]<a title=Remove />
		Format:
                    CD
	[62]<a title=Remove />
		Year:
                    2016
	[63]<a title=Remove />
		Format Description:
                    Album
	[64]<a title=Remove />
		Ships From:
                    United Kingdom
	Format
	[65]<a />
		85
		All Media
	[66]<a />
		78
		Box Set
	[67]<a />
		62
		DVD
	[68]<a />
		27
		Vinyl
	[69]<a />
		Blu-ray
	[70]<a />
		Show more…
	Price Range
	[71]<a />
		Custom Range
	[72]<a />
		534
		Less than £5
	[73]<a />
		405
		£5 - £10
	[74]<a />
		173
		£10 - £15
	[75]<a />
		60
		£15 - £20
	[76]<a />
		53
		£20 - £40
	[77]<a />
		51
		More than £40
	Genre
	[78]<a />
		1,246
		Rock
	[79]<a />
		756
		Pop
	[80]<a />
		165
		Funk / Soul
	[81]<a />
		138
		Electronic
	[82]<a />
		84
		Folk, World, & Country
	[83]<a />
		Show more…
	Style
	[84]<a />
		125
		Indie Rock
	[85]<a />
		106
		Alternative Rock
	[86]<a />
		104
		Ballad
	[87]<a />
		88
		Acoustic
	[88]<a />
	Shop Pop Rock Album CDs released in 2016 in United Kingdom
	1 – 25 of 1,276
	[89]<i role=img aria-label=Previous />
	Prev
	[90]<a />
		Next
		[91]<i role=img aria-label=Next />
	[92]<label />
		Sort
	[93]<select name=sort expanded=false />
	[94]<label />
		Show
		items per page
	[95]<select name=limit expanded=false />
	Sort By:
	[96]<a />
		Listed
	[97]<a />
		Condition
	[98]<a />
		Artist
	[99]<a />
		Title
	[100]<a />
		Label
	[101]<a />
		Seller
	[102]<a />
		Price
	Actions
	[103]<a />
		[104]<img alt=KT Tunstall - KIN for sale />
	Rated:
	3.00
	[105]<span />
	[106]<span />
		35 have
	[107]<span />
	[108]<span />
		10 want
	[109]<a />
		KT Tunstall - KIN (CD, Album, Ltd)
	[110]<span />
		Label:
	[111]<a />
		Virgin
	[112]<a />
		Virgin
	[113]<a />
		Virgin
	[114]<span />
		Cat#:
	CDVX3158, CDV 3158, 00602547994783
	Media Condition:
	Mint (M)
	[115]<span role=note />
		[116]<i role=img />
		The disc is in perfect condition. No scuffs or scratches, possibly still sealed.
	Sleeve Condition:
	Mint (M)
	Brand new Cd sealed with SIGNED card
	[117]<a />
		View Release Page
	[118]<a />
		themusicmerchant
	[119]<i role=img />
	[120]<i role=img />
	[121]<i role=img />
	[122]<i role=img />
	[123]<i role=img />
	99.7%
	[124]<a />
		11,962 ratings
	Ships From:
	United Kingdom
	[125]<span />
		£7.80
	about
	€8.96
	[126]<button />
		shipping
	Unavailable in Singapore
	[127]<a />
		[128]<img alt=The Flywheels - I'm For The Flowers for sale />
	Rated:
	5.00
	[129]<span />
	[130]<span />
		10 have
	[131]<span />
	[132]<span />
		4 want
	[133]<a />
		The Flywheels - I'm For The Flowers (CD, Album)
	[134]<span />
		Label:
	[135]<a />
		Mystery Lawn Music
	[136]<span />
		Cat#:
	MLM018
	Media Condition:
	Very Good Plus (VG+)
	[137]<span role=note />
		[138]<i role=img />
		Will show some signs that it was played and otherwise handled by a previous owner who took good care of it.
	Sleeve Condition:
	Very Good Plus (VG+)
	[ID: 7811623] These jangly, melodic tunes echo the essence of such hallowed power-pop combos as Big Star, Badfinger and the Flamin' Groovies.
	[139]<a />
		View Release Page
	[140]<a />
		vinylexchange.co.uk
	[141]<img alt=Independent record store badge. title=Certified Independent Record Store />
	[142]<i role=img />
	[143]<i role=img />
	[144]<i role=img />
	[145]<i role=img />
	[146]<i role=img />
	99.7%
	[147]<a />
		37,579 ratings
	Ships From:
	United Kingdom
	[148]<span />
		£5.00
	+£12.50
	[149]<button />
		shipping
	about
	€20.10
	total
	[150]<a />
		Add to Cart
	[151]<a />
		[152]<strong />
			Details
	[153]<a />
		[154]<img alt=The Spencer Davis Group - Taking Out Time (Complete Recordings 1967-1969) for sale />
	Rated:
	4.36
	[155]<span />
	[156]<span />
		159 have
	[157]<span />
	[158]<span />
		66 want
	[159]<a />
		The Spencer Davis Group - Taking Out Time (Complete Recordings 1967-1969) (CD, Album, RE, RM + CD, RE, RM + CD + Box, Comp)
	[160]<span />
		Label:
	[161]<a />
		RPM Records (2)
	[162]<span />
		Cat#:
	RPMBX533
	Media Condition:
	Mint (M)
	[163]<span role=note />
		[164]<i role=img />
		The disc is in perfect condition. No scuffs or scratches, possibly still sealed.
	Sleeve Condition:
	Mint (M)
	[ID: 7818955] Complete collection of all the recordings made by 60s Hammond driven R&B Pop stars The Spencer Davis Group during the period 1967-1969.
	[165]<a />
		View Release Page
	[166]<a />
		vinylexchange.co.uk
	[167]<img alt=Independent record store badge. title=Certified Independent Record Store />
	[168]<i role=img />
	[169]<i role=img />
	[170]<i role=img />
	[171]<i role=img />
	[172]<i role=img />
	99.7%
	[173]<a />
		37,579 ratings
	Ships From:
	United Kingdom
	[174]<span />
		£22.00
	+£60.00
	[175]<button />
		shipping
	about
	€94.19
	total
	[176]<a />
		Add to Cart
	[177]<a />
		[178]<strong />
			Details
	[179]<a />
		[180]<img alt=Fleetwood Mac - Mirage for sale />
	Rated:
	4.30
	[181]<span />
	[182]<span />
		393 have
	[183]<span />
	[184]<span />
		104 want
	[185]<a />
		Fleetwood Mac - Mirage (CD, Album, RE, RM + CD, Comp)
	[186]<span />
		Label:
	[187]<a />
		Warner Bros. Records
	[188]<span />
		Cat#:
	R2 554818
	Media Condition:
	Near Mint (NM or M-)
	[189]<span role=note />
		[190]<i role=img />
		A nearly perfect disc. It should show no obvious signs of wear.
	Sleeve Condition:
	Near Mint (NM or M-)
	[ID: 7822881] 2016 remastered reissue of original 1982 LP, includes bonus disc with outtakes & sessions, in digipak sleeve.
	[191]<a />
		View Release Page
	[192]<a />
		vinylexchange.co.uk
	[193]<img alt=Independent record store badge. title=Certified Independent Record Store />
	[194]<i role=img />
	[195]<i role=img />
	[196]<i role=img />
	[197]<i role=img />
	[198]<i role=img />
	99.7%
	[199]<a />
		37,579 ratings
	Ships From:
	United Kingdom
	[200]<span />
		£15.00
	+£14.50
	[201]<button />
		shipping
	about
	€33.89
	total
	[202]<a />
		Add to Cart
	[203]<a />
		[204]<strong />
			Details
[End of page]
</browser_state>

Current screenshot:

 RESPONSE
{
  "thinking": "I have the extracted content from the first page of Pop Rock album CDs from 2016 shipping from the UK on Discogs. The data includes artist name, album title, seller rating, media and sleeve condition, price including shipping, and some descriptions. I will now analyze this data to recommend an album based on good seller rating, good media/sleeve condition, reasonable price, and any notable description or user rating score.",
  "evaluation_previous_goal": "The extraction of structured data was successful and I have the relevant information to analyze for recommendation.",
  "memory": "Extracted details for 25 Pop Rock albums from 2016 shipping from UK on Discogs. Data includes seller ratings mostly above 99%, media and sleeve conditions ranging from Mint to Very Good Plus, prices with shipping included, and some user comments.",
  "next_goal": "Analyze the extracted data to identify the best recommended album based on seller rating, media condition, sleeve condition, price, and user comments.",
  "action": [
    {
      "read_file": {
        "file_name": "extracted_content_0.md"
      }
    }
  ]
}